337. House Robber III
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        HashMap<TreeNode,Integer> mp = new HashMap<>();
        return helper(mp,root);
        
    }
    int helper(HashMap<TreeNode ,Integer> mp , TreeNode root){
        if(root==null) return 0;
        int ans =0;
        if(mp.containsKey(root)) return mp.get(root);
        if(root.left!= null){
            ans+=helper(mp,root.left.left)+helper(mp,root.left.right);
        }
        if(root.right!= null){
            ans+=helper(mp,root.right.left)+helper(mp,root.right.right);
        }
        ans= Math.max(ans+root.val,helper(mp,root.left)+helper(mp,root.right));
        mp.put(root,ans);
        return ans;

    }
}
