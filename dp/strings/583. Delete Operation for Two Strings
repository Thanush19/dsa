class Solution {
    public int minDistance(String w1, String w2) {
        int n1 = w1.length();
        int n2 = w2.length();
        int[][] dp = new int[n1+1][n2+1];
        for(int i =1;i<=n1;i++){
            for(int j =1;j<=n2;j++){
                if(w1.charAt(i-1)==w2.charAt(j-1)){
                    dp[i][j]=1+ dp[i-1][j-1];
                }
                else{
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }

        }
        return (n1+n2)- 2*( dp[n1][n2]);
        //dp[n1][n2]--> give no.of longest common substring
        //so we need to delete the uncommon part;
        //  sea  eat  , lcs =2;(ea)
        // 3+3-2*2= 6-4= 2 , we need to del 2 chars
    }
}